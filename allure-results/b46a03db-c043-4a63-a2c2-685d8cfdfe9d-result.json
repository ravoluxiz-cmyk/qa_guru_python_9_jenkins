{"name": "Successful fill form", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '#example-modal-sizes-title-lg')).has text Thanks for submitting the form\n\nReason: AssertionError: actual text: \nScreenshot: file:///Users/dmitry/.selene/screenshots/1759910891098/1759910891098.png\nPageSource: file:///Users/dmitry/.selene/screenshots/1759910891098/1759910891098.html", "trace": "fn = <selene.core.conditions.ElementCondition object at 0x10328cc30>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self.entity)\n                       ^^^^^^^^^^^^^^^\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selene/core/wait.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selene/core/condition.py:174: in __call__\n    return self._fn(entity)\n           ^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nentity = <selene.core.entity.Element object at 0x1032950d0>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__ if query_to_str.startswith('<function') else query_to_str\n        )\n        actual = query(entity)\n        if not predicate(actual):\n>           raise AssertionError(f'actual {result}: {actual}')\nE           AssertionError: actual text:\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selene/core/condition.py:146: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nsetup_browser = <selene.core._browser.Browser object at 0x1031b6d50>\n\n    @allure.title(\"Successful fill form\")\n    def test_successful(setup_browser):\n        browser = setup_browser\n        first_name = \"Alex\"\n        last_name = \"Egorov\"\n    \n        with allure.step(\"Open registrations form\"):\n            browser.open(\"https://demoqa.com/automation-practice-form\")\n            browser.element(\".practice-form-wrapper\").should(have.text(\"Student Registration Form\"))\n            browser.driver.execute_script(\"$('footer').remove()\")\n            browser.driver.execute_script(\"$('#fixedban').remove()\")\n    \n        with allure.step(\"Fill form\"):\n            browser.element(\"#firstName\").set_value(first_name)\n            browser.element(\"#lastName\").set_value(last_name)\n            browser.element(\"#userEmail\").set_value(\"alex@egorov.com\")\n            browser.element(\"#genterWrapper\").element(by.text(\"Other\")).click()\n            browser.element(\"#userNumber\").set_value(\"1231231230\")\n            # browser.element(\"#dateOfBirthInput\").click()\n            # browser.element(\".react-datepicker__month-select\").s(\"July\")\n            # browser.element(\".react-datepicker__year-select\").selectOption(\"2008\")\n            # browser.element(\".react-datepicker__day--030:not(.react-datepicker__day--outside-month)\").click()\n            browser.element(\"#subjectsInput\").send_keys(\"Maths\")\n            browser.element(\"#subjectsInput\").press_enter()\n            # clicking the label sometimes fails due to overlays; click the checkbox input via JS instead\n            browser.driver.execute_script(\"document.getElementById('hobbies-checkbox-1').click()\")\n            # browser.element(\"#uploadPicture\").uploadFromClasspath(\"img/1.png\")\n            browser.element(\"#currentAddress\").set_value(\"Some street 1\")\n            # remove/hide any modal overlay that might intercept clicks\n            browser.driver.execute_script(\"$('.modal').hide(); $('.modal-backdrop').remove();\")\n            browser.element(\"#state\").click()\n            browser.element(\"#stateCity-wrapper\").element(by.text(\"NCR\")).click()\n            browser.element(\"#city\").click()\n            browser.element(\"#stateCity-wrapper\").element(by.text(\"Delhi\")).click()\n            browser.element(\"#submit\").click()\n    \n        with allure.step(\"Check form results\"):\n>           browser.element(\"#example-modal-sizes-title-lg\").should(have.text(\"Thanks for submitting the form\"))\n\ntests/demoqa/test_registration_form.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selene/core/entity.py:132: in should\n    self.wait.for_(condition)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selene/core/wait.py:150: in for_\n    return self._decorator(self)(logic)(fn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfn = <selene.core.conditions.ElementCondition object at 0x10328cc30>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n                return fn(self.entity)\n            except Exception as reason:\n                if time.time() > finish_time:\n                    reason_string = '{name}: {message}'.format(\n                        name=reason.__class__.__name__,\n                        message=getattr(reason, \"msg\", str(reason)),\n                    )\n                    # TODO: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                    # stacktrace = getattr(reason, 'stacktrace', None)\n                    # TODO: should we have an option to turn on stacktrace logging?\n                    timeout = self._timeout\n                    entity = self.entity\n    \n                    # if it's a normal function, it should have __qualname__,\n                    # then use it, otherwise use str(fn)\n                    fn_name = getattr(\n                        fn,\n                        '__qualname__',\n                        getattr(fn, '__str__', lambda: str(fn))(),\n                    )\n    \n                    failure = TimeoutException(\n                        f'\\n'\n                        f'\\nTimed out after {timeout}s, while waiting for:'\n                        f'\\n{entity}.{fn_name}'\n                        f'\\n'\n                        f'\\nReason: {reason_string}'\n                    )\n    \n>                   raise self._hook_failure(failure)\nE                   selene.core.exceptions.TimeoutException: Message: \nE                   \nE                   Timed out after 4s, while waiting for:\nE                   browser.element(('css selector', '#example-modal-sizes-title-lg')).has text Thanks for submitting the form\nE                   \nE                   Reason: AssertionError: actual text: \nE                   Screenshot: file:///Users/dmitry/.selene/screenshots/1759910891098/1759910891098.png\nE                   PageSource: file:///Users/dmitry/.selene/screenshots/1759910891098/1759910891098.html\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selene/core/wait.py:148: TimeoutException"}, "steps": [{"name": "Open registrations form", "status": "passed", "start": 1759910892696, "stop": 1759910895917}, {"name": "Fill form", "status": "passed", "start": 1759910895917, "stop": 1759910896284}, {"name": "Check form results", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '#example-modal-sizes-title-lg')).has text Thanks for submitting the form\n\nReason: AssertionError: actual text: \nScreenshot: file:///Users/dmitry/.selene/screenshots/1759910891098/1759910891098.png\nPageSource: file:///Users/dmitry/.selene/screenshots/1759910891098/1759910891098.html\n\n", "trace": "  File \"/Users/dmitry/qa_guru_python_9_jenkins-4/tests/demoqa/test_registration_form.py\", line 42, in test_successful\n    browser.element(\"#example-modal-sizes-title-lg\").should(have.text(\"Thanks for submitting the form\"))\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selene/core/entity.py\", line 132, in should\n    self.wait.for_(condition)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selene/core/wait.py\", line 150, in for_\n    return self._decorator(self)(logic)(fn)\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selene/core/wait.py\", line 148, in logic\n    raise self._hook_failure(failure)\n"}, "start": 1759910896284, "stop": 1759910900347}], "start": 1759910892696, "stop": 1759910900349, "uuid": "d7d77eb2-b343-47ee-98b7-d7742e0370af", "historyId": "6fe5a9365b874ddd38dec6751b552478", "testCaseId": "6fe5a9365b874ddd38dec6751b552478", "fullName": "tests.demoqa.test_registration_form#test_successful", "labels": [{"name": "parentSuite", "value": "tests.demoqa"}, {"name": "suite", "value": "test_registration_form"}, {"name": "host", "value": "MacBook-Air.local"}, {"name": "thread", "value": "45037-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.demoqa.test_registration_form"}], "titlePath": ["tests", "demoqa", "test_registration_form.py"]}